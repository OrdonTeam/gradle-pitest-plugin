plugins {
    id 'com.gradle.plugin-publish' version '0.9.4'
    id 'com.bmuschko.nexus' version '2.3.1'
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7

group = GROUP
version = VERSION

repositories {
    mavenCentral()
    mavenLocal()
}

sourceSets {
    funcTest {
        java.srcDir file('src/funcTest/java')
        groovy.srcDir file('src/funcTest/groovy')
        resources.srcDir file('src/funcTest/resources') //Broken in Idea - https://youtrack.jetbrains.com/issue/IDEA-128966
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.android.tools.build:gradle:2.1.2'

    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        //groovy 2.3.x is already provided by Gradle itself
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:3.2.4'   //for Spying in Spock
    testCompile 'junit:junit:4.12'

    funcTestCompile sourceSets.main.output
    funcTestCompile sourceSets.test.output  //to make visible funcTest resources moved to test resources as a workaround for Idea bug

    funcTestCompile configurations.testCompile
    funcTestRuntime configurations.testRuntime
    //dependencies from non default configurations are ignored in Idea - https://youtrack.jetbrains.com/issue/IDEA-121728
    /*funcT*/testCompile('com.netflix.nebula:nebula-test:4.2.2') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
}

task funcTest(type: Test, group: "verification") {
    testClassesDir = sourceSets.funcTest.output.classesDir
    classpath = sourceSets.funcTest.runtimeClasspath

    reports.html {
        destination = file("${reporting.baseDir}/funcTests")
    }
}
funcTest.shouldRunAfter test
check.shouldRunAfter funcTest

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    reportOn test, funcTest
}

publishPlugins.dependsOn funcTest, check
uploadArchives.dependsOn funcTest, check

wrapper {
    gradleVersion "2.14"
}

modifyPom {
    project {
        name POM_NAME
        description POM_DESCRIPTION
        url POM_URL

        scm {
            connection 'scm:git@github.com:koral--/gradle-pitest-plugin.git'
            developerConnection 'scm:git@github.com:koral--/gradle-pitest-plugin.git'
            url POM_SCM_URL
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'koral'
                name 'Karol Wr√≥tniak'
                email 'karol.wrotniak@droidsonroids.pl'
            }
        }
    }
}

pluginBundle {
    website = POM_URL
    vcsUrl = POM_SCM_URL
    tags = ['pitest', 'android', 'mutation testing']
    description = POM_DESCRIPTION

    plugins {
        pitestPlugin {
            id = 'pl.droidsonroids.pitest'
            displayName = POM_NAME
        }
    }
}

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}